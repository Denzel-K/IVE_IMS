<section class="skeleton">
  {{>sidebar}}

  <section class="parent_container">
    {{>dynamic_head}}

    <div class="dynamic_body">
      {{!-- Your sections and divs go here --}}

    <div class=" mx-auto p-4">
        <!-- Header -->
        <h1 class="text-3xl font-bold text-center mb-4 text-gray-800">Inventory Management</h1>

        <div class=" mx-auto p-4">
            <!-- Add Equipment Button -->
            <div class="flex justify-end mb-4">
                <button type="button" class="new_inventory_btn">
                    <span>
                        <svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path class="add_svg_path" fill-rule="evenodd" clip-rule="evenodd" d="M12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2C16.714 2 19.0711 2 20.5355 3.46447C22 4.92893 22 7.28595 22 12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22ZM12 8.25C12.4142 8.25 12.75 8.58579 12.75 9V11.25H15C15.4142 11.25 15.75 11.5858 15.75 12C15.75 12.4142 15.4142 12.75 15 12.75H12.75L12.75 15C12.75 15.4142 12.4142 15.75 12 15.75C11.5858 15.75 11.25 15.4142 11.25 15V12.75H9C8.58579 12.75 8.25 12.4142 8.25 12C8.25 11.5858 8.58579 11.25 9 11.25H11.25L11.25 9C11.25 8.58579 11.5858 8.25 12 8.25Z" fill="#00afd4"/>
                        </svg>
                    </span>
                    <span class="ml-2 text-sm font-semibold text-[#086375] transition-all duration-300 ease-in-out hover:text-gray-100">Add Equipment</span>
                </button>
            </div>
        </div>

        <!-- Search & Filters -->
        <div class="flex flex-wrap justify-between items-center bg-white p-4 rounded-lg shadow-lg mb-4 hover-shadow">
            <input type="text" id="searchInput" placeholder="üîç Search equipment..."
                class="border px-2 py-1 rounded-md shadow-sm focus:ring focus:ring-blue-300 w-full md:w-1/3 mb-2 md:mb-0 text-sm">

            <select id="statusFilter" class="border px-2 py-1 rounded-md shadow-sm mb-2 md:mb-0 text-sm">
                <option value="">All Status</option>
                <option value="Available">‚úÖ Available</option>
                <option value="In Use">üî¥ In Use</option>
                <option value="Maintenance">‚öôÔ∏è Maintenance</option>
            </select>

            <button onclick="resetFilters()" class="bg-red-500 text-white px-2 py-1 rounded-md shadow hover:bg-red-700 transition-colors text-sm">
                Reset Filters
            </button>
        </div>

        <!-- Equipment Table -->
        <div class="bg-white p-6 rounded-lg shadow-lg mb-6 hover-shadow">
            <h2 class="text-2xl font-semibold mb-4 text-gray-700">Equipment & Machines Tracking</h2>
            <div class="overflow-x-auto">
                <table id="equipmentTable" class="w-full border-collapse border border-gray-300">
                    <thead>
                        <tr class="bg-gray-200 text-gray-700">
                            <th class="border border-gray-300 px-4 py-2 text-left">ID</th>
                            <th class="border border-gray-300 px-4 py-2 text-left">Name</th>
                            <th class="border border-gray-300 px-4 py-2 text-left">Type</th>
                            <th class="border border-gray-300 px-4 py-2 text-left">Status</th>
                            <th class="border border-gray-300 px-4 py-2 text-left">Location</th>
                            <th class="border border-gray-300 px-4 py-2 text-left">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Equipment rows will be dynamically inserted here -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Navigation Links -->
        <div class="flex justify-center space-x-2 mt-4">
            <a href="page2.html" class="bg-blue-500 text-white px-2 py-1 rounded-md hover:bg-blue-700 text-sm">Go to Maintenance Logs</a>
            <a href="page3.html" class="bg-green-500 text-white px-2 py-1 rounded-md hover:bg-green-700 text-sm">Go to Consumables</a>
        </div>
    </div>

    <!-- Modal for Equipment Details -->
    <div id="modal" class="fixed inset-0 bg-gray-800 bg-opacity-50 hidden flex justify-center items-center">
        <div class="bg-white p-4 rounded-lg shadow-lg w-11/12 md:w-1/3 hover-scale">
            <h2 id="modalTitle" class="text-xl font-semibold mb-2">Equipment Details</h2>
            <p id="modalContent" class="text-sm">Lorem ipsum dolor sit amet...</p>
            <button onclick="closeModal()" class="mt-2 bg-red-500 text-white px-2 py-1 rounded hover:bg-red-700 text-sm">Close</button>
        </div>
    </div>

    </div>
  </section>

  <div class="custom_modal add_inventory_modal hidden">
    <div class="dialog">
        <div class="modal_head">
            <h3>Add item</h3>
            <span class="close_modal" id="close_inventory_modal">
                <img src="assets/icons/close-circle.svg" alt="close-circle">
            </span>
        </div>

        <div class="modal_body py-4">
            <form id="addEquipmentForm" class="flex flex-col md:gap-4 w-full">
                <div class="grid grid-cols-2 w-full gap-2">
                <input type="text" id="equipmentName" placeholder="Name" class="border px-4 py-2 rounded-md shadow-sm">
                <select id="equipmentType" class="border px-4 py-2 rounded-md shadow-sm">
                    <option value="Equipment">Equipment</option>
                    <option value="Machine">Machine</option>
                    <option value="Consumables">Consumables</option>
                </select>
                </div>
                <div class="flex flex-row gap-4">
                <select id="equipmentStatus" class="border px-4 py-2 rounded-md shadow-sm">
                    <option value="Available">‚úÖ Available</option>
                    <option value="In Use">üî¥ In Use</option>
                    <option value="Maintenance">‚öôÔ∏è Maintenance</option>
                </select>
                <input type="text" id="equipmentLocation" placeholder="Location" class="border px-4 py-2 rounded-md shadow-sm">
                </div>
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-700">Add Equipment</button>
            </form>
        </div>
    </div>
  </div>
</section>

  <script>
      // Sample Data (Replace with API calls or database in a real application)
      let equipmentData = [
          { id: 101, name: "3D Printer", type: "Machine", status: "Available", location: "Design Studio" },
          { id: 102, name: "Laser Cutter", type: "Machine", status: "In Use", location: "Cezeri Lab" },
          { id: 103, name: "Oscilloscope", type: "Equipment", status: "Maintenance", location: "Workshop" },
      ];

      // DOM Elements
      const searchInput = document.getElementById("searchInput");
      const statusFilter = document.getElementById("statusFilter");
      const equipmentTableBody = document.querySelector("#equipmentTable tbody");
      const addEquipmentForm = document.getElementById("addEquipmentForm");

      // Initialize Table
      document.addEventListener("DOMContentLoaded", () => {
          renderEquipmentTable();
      });

      // Render Equipment Table
      function renderEquipmentTable(filteredData = equipmentData) {
          equipmentTableBody.innerHTML = "";
          filteredData.forEach(item => {
              const row = `
                  <tr class="hover:bg-gray-50 transition-colors">
                      <td class="border border-gray-300 px-4 py-2">${item.id}</td>
                      <td class="border border-gray-300 px-4 py-2">${item.name}</td>
                      <td class="border border-gray-300 px-4 py-2">${item.type}</td>
                      <td class="border border-gray-300 px-4 py-2 ${
                          item.status === "Available" ? "text-green-600" : 
                          item.status === "In Use" ? "text-red-600" : "text-yellow-600"
                      }">${item.status}</td>
                      <td class="border border-gray-300 px-4 py-2">${item.location}</td>
                      <td class="border border-gray-300 px-4 py-2">
                          <button onclick="openModal('${item.name}')" class="text-blue-500 hover:underline">View</button>
                          <button onclick="deleteEquipment(${item.id})" class="text-red-500 hover:underline ml-2">Delete</button>
                      </td>
                  </tr>
              `;
              equipmentTableBody.innerHTML += row;
          });
      }

      // Function to toggle the Add Equipment modal
      /*function toggleAddEquipmentModal() {
          const modal = document.getElementById("addEquipmentModal");
          modal.classList.toggle("hidden");
      }
      */
      
    // Open Add equipment modal
    const new_inventory_btn = document.querySelector('.new_inventory_btn');
    const add_inventory_modal = document.querySelector('.add_inventory_modal');
    const close_inventory_modal = document.querySelector('#close_inventory_modal');

    new_inventory_btn.addEventListener('click', () => {
        add_inventory_modal.classList.remove('hidden');
    });
    close_inventory_modal.addEventListener('click', () => {
        add_inventory_modal.classList.add('hidden');
    })

    // Close modal when clicking outside the modal
    window.addEventListener("click", (event) => {
        const modal = document.querySelector(".custom_modal");

        if (event.target === modal) {
            modal.classList.add("hidden");
        }
    });


    // Add New Equipment
    addEquipmentForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const newEquipment = {
            id: equipmentData.length + 1,
            name: document.getElementById("equipmentName").value,
            type: document.getElementById("equipmentType").value,
            status: document.getElementById("equipmentStatus").value,
            location: document.getElementById("equipmentLocation").value,
        };
        equipmentData.push(newEquipment);
        renderEquipmentTable(); // Update the table with the new data
        addEquipmentForm.reset(); // Clear the form
        add_inventory_modal.classList.add('hidden'); // Close modal
    });

    // Delete Equipment
    function deleteEquipment(id) {
    const index = equipmentData.findIndex(item => item.id === id);
    if (index !== -1) {
        equipmentData.splice(index, 1);
        renderEquipmentTable(); // Update the table after deletion
    }
    }

    // Search Equipment
    searchInput.addEventListener("input", () => {
    const searchTerm = searchInput.value.toLowerCase();
    const filteredData = equipmentData.filter(item =>
        item.name.toLowerCase().includes(searchTerm) ||
        item.location.toLowerCase().includes(searchTerm)
    );
    renderEquipmentTable(filteredData);
    });

    // Filter Equipment by Status
    statusFilter.addEventListener("change", () => {
        const status = statusFilter.value;
        const filteredData = status ? equipmentData.filter(item => item.status === status) : equipmentData;
        renderEquipmentTable(filteredData);
    });

    // Reset Filters
    function resetFilters() {
        searchInput.value = "";
        statusFilter.value = "";
        renderEquipmentTable(equipmentData);
    }

    // Modal Functions
    function openModal(itemName) {
        document.getElementById("modalTitle").innerText = itemName + " Details";
        document.getElementById("modalContent").innerText = `Detailed information about ${itemName}.`;
        document.getElementById("modal").classList.remove("hidden");
    }

    function closeModal() {
        document.getElementById("modal").classList.add("hidden");
    }
</script>
<script src="js/shared.js"></script>